type QuestionCreated @entity(immutable: true) {
  id: Bytes!
  QuestionTemplateManager_id: BigInt! # uint256
  templateId: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type TemplateActivated @entity(immutable: false) {
  id: ID! 
  QuestionTemplateManager_id: BigInt! # uint256
  activated: Boolean! # bool
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type TemplateCreated @entity(immutable: false) {
  id: ID!
  QuestionTemplateManager_id: BigInt! # uint256
  templateText: String! # string
  category: String! # string
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
  activated: Boolean!
}

type VariableAdded @entity(immutable: true) {
  id: Bytes!
  templateId: BigInt! # uint256
  name: String! # string
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}


type Claimed @entity {
  id: ID!
  user: Bytes!
  amount: BigInt!
  blockNumber: BigInt!
  timestamp: BigInt!
  transactionHash: Bytes!
}

type NewClaim @entity {
  id: ID!
  user: Bytes!
  predictionId: BigInt!
  amount: BigInt!
  claimtype: Int! # uint8 -> map to Int
  blockNumber: BigInt!
  timestamp: BigInt!
  transactionHash: Bytes!
}

type PredictionChallenged @entity {
  id: ID!
  predictionId: BigInt!
  challenger: Bytes!
  amount: BigInt!
  blockNumber: BigInt!
  timestamp: BigInt!
  transactionHash: Bytes!
}

type PredictionCreated @entity {
  id: ID!
  predictionId: BigInt!
  postId: BigInt!
  questionId: BigInt!
  sender: Bytes!
  stake: BigInt!
  questionText: String!
  minChallengeStake: BigInt!
  maxChallengeStake: BigInt!
  blockNumber: BigInt!
  timestamp: BigInt!
  transactionHash: Bytes!
}

type PredictionResolved @entity {
  id: ID!
  predictionId: BigInt!
  resolution: Int! # uint8 enum
  blockNumber: BigInt!
  timestamp: BigInt!
  transactionHash: Bytes!
}

