import { HardhatRuntimeEnvironment } from 'hardhat/types';
import * as zk from 'zksync-ethers';
import { ZkSyncArtifact } from '@matterlabs/hardhat-zksync-deploy/src/types';
import { ContractAddressOrInstance } from '../utils/utils-general';
import { UpgradeBeaconOptions } from '../utils/options';
export type UpgradeBeaconFactory = (beacon: ContractAddressOrInstance, factory: zk.ContractFactory, opts?: UpgradeBeaconOptions, quiet?: boolean) => Promise<zk.Contract>;
export type UpgradeBeaconArtifact = (wallet: zk.Wallet, beacon: ContractAddressOrInstance, artifact: ZkSyncArtifact, opts?: UpgradeBeaconOptions, quiet?: boolean) => Promise<zk.Contract>;
export declare function upgradeBeaconFactory(hre: HardhatRuntimeEnvironment, beacon: ContractAddressOrInstance, factory: zk.ContractFactory, opts?: UpgradeBeaconOptions, quiet?: boolean): Promise<zk.Contract>;
export declare function upgradeBeaconArtifact(hre: HardhatRuntimeEnvironment, wallet: zk.Wallet, beacon: ContractAddressOrInstance, artifact: ZkSyncArtifact, opts?: UpgradeBeaconOptions, quiet?: boolean): Promise<zk.Contract>;
export declare function makeUpgradeBeacon(hre: HardhatRuntimeEnvironment): UpgradeBeaconArtifact | UpgradeBeaconFactory;
//# sourceMappingURL=upgrade-beacon.d.ts.map