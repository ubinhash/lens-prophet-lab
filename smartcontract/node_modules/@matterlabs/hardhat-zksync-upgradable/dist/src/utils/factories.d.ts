import { ZkSyncArtifact } from '@matterlabs/hardhat-zksync-deploy/src/types';
import { HardhatRuntimeEnvironment } from 'hardhat/types';
import { Contract, ContractFactory, Wallet } from 'zksync-ethers';
import { DeploymentType } from 'zksync-ethers/src/types';
export declare function getProxyArtifact(hre: HardhatRuntimeEnvironment): Promise<ZkSyncArtifact>;
export declare function getProxyFactory(hre: HardhatRuntimeEnvironment, wallet: Wallet, deploymentType?: DeploymentType): Promise<ContractFactory<any[], Contract>>;
export declare function getTransparentUpgradeableProxyArtifact(hre: HardhatRuntimeEnvironment): Promise<ZkSyncArtifact>;
export declare function getTransparentUpgradeableProxyFactory(hre: HardhatRuntimeEnvironment, wallet: Wallet, deploymentType?: DeploymentType): Promise<ContractFactory<any[], Contract>>;
export declare function getBeaconProxyArtifact(hre: HardhatRuntimeEnvironment): Promise<ZkSyncArtifact>;
export declare function getBeaconProxyFactory(hre: HardhatRuntimeEnvironment, wallet: Wallet, deploymentType?: DeploymentType): Promise<ContractFactory<any[], Contract>>;
export declare function getUpgradableBeaconArtifact(hre: HardhatRuntimeEnvironment): Promise<ZkSyncArtifact>;
export declare function getUpgradeableBeaconFactory(hre: HardhatRuntimeEnvironment, wallet: Wallet, deploymentType?: DeploymentType): Promise<ContractFactory<any[], Contract>>;
export declare function getProxyAdminArtifact(hre: HardhatRuntimeEnvironment): Promise<ZkSyncArtifact>;
export declare function getProxyAdminFactory(hre: HardhatRuntimeEnvironment, wallet: Wallet, deploymentType?: DeploymentType): Promise<ContractFactory<any[], Contract>>;
//# sourceMappingURL=factories.d.ts.map