import type { HardhatRuntimeEnvironment } from 'hardhat/types';
import * as zk from 'zksync-ethers';
import { ZkSyncArtifact } from '@matterlabs/hardhat-zksync-deploy/src/types';
import { DeployProxyOptions } from '../utils/options';
export type DeployFunctionFactory = (factory: zk.ContractFactory, args?: unknown[], opts?: DeployProxyOptions, quiet?: boolean) => Promise<zk.Contract>;
export type DeployFunctionFactoryNoArgs = (factory: zk.ContractFactory, opts?: DeployProxyOptions, quiet?: boolean) => Promise<zk.Contract>;
export type DeployFunctionArtifact = (wallet: zk.Wallet, artifact: ZkSyncArtifact, args?: unknown[], opts?: DeployProxyOptions, quiet?: boolean) => Promise<zk.Contract>;
export declare function makeDeployProxy(hre: HardhatRuntimeEnvironment): DeployFunctionFactory | DeployFunctionFactoryNoArgs | DeployFunctionArtifact;
export declare function deployProxyFactory(hre: HardhatRuntimeEnvironment, factory: zk.ContractFactory, args?: unknown[], opts?: DeployProxyOptions, quiet?: boolean): Promise<zk.Contract>;
export declare function deployProxyFactoryNoArgs(hre: HardhatRuntimeEnvironment, factory: zk.ContractFactory, opts?: DeployProxyOptions, quiet?: boolean): Promise<zk.Contract>;
export declare function deployProxyArtifact(hre: HardhatRuntimeEnvironment, wallet: zk.Wallet, artifact: ZkSyncArtifact, args?: unknown[], opts?: DeployProxyOptions, quiet?: boolean): Promise<zk.Contract>;
//# sourceMappingURL=deploy-proxy.d.ts.map