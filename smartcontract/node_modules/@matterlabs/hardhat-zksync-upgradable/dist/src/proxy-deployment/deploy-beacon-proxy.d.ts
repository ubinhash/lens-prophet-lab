import type { HardhatRuntimeEnvironment } from 'hardhat/types';
import * as zk from 'zksync-ethers';
import { ZkSyncArtifact } from '@matterlabs/hardhat-zksync-deploy/src/types';
import { ContractAddressOrInstance } from '../utils/utils-general';
import { DeployBeaconProxyOptions } from '../utils/options';
export type DeployBeaconProxyFactory = (beacon: ContractAddressOrInstance, factory: zk.ContractFactory, args?: unknown[], opts?: DeployBeaconProxyOptions, quiet?: boolean) => Promise<zk.Contract>;
export type DeployBeaconProxyArtifact = (wallet: zk.Wallet, beacon: ContractAddressOrInstance, artifact: ZkSyncArtifact, args?: unknown[], opts?: DeployBeaconProxyOptions, quiet?: boolean) => Promise<zk.Contract>;
export declare function makeDeployBeaconProxy(hre: HardhatRuntimeEnvironment): DeployBeaconProxyFactory | DeployBeaconProxyArtifact;
export declare function deployBeaconProxyArtifact(hre: HardhatRuntimeEnvironment, wallet: zk.Wallet, beacon: ContractAddressOrInstance, artifact: ZkSyncArtifact, args?: unknown[], opts?: DeployBeaconProxyOptions, quiet?: boolean): Promise<zk.Contract>;
export declare function deployBeaconProxyFactory(hre: HardhatRuntimeEnvironment, beacon: ContractAddressOrInstance, factory: zk.ContractFactory, args?: unknown[], opts?: DeployBeaconProxyOptions, quiet?: boolean): Promise<zk.Contract>;
//# sourceMappingURL=deploy-beacon-proxy.d.ts.map