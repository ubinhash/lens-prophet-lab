"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ZkSyncGenerator = void 0;
const plugins_1 = require("hardhat/plugins");
const utils_1 = require("./utils");
const helpers_1 = require("./helpers");
class ZkSyncGenerator {
    constructor(_hre) {
        this._hre = _hre;
    }
    populateExtension() {
        return (0, plugins_1.lazyObject)(() => {
            const zksyncEthers = require('zksync-ethers');
            const { ethWeb3Provider, zkWeb3Provider } = (0, utils_1.createProviders)(this._hre);
            const { ethers } = require('ethers');
            return {
                ...ethers,
                ...zksyncEthers,
                providerL1: ethWeb3Provider,
                providerL2: zkWeb3Provider,
                provider: zkWeb3Provider,
                getSigners: () => (0, helpers_1.getSigners)(this._hre),
                getSigner: (address) => (0, helpers_1.getSigner)(this._hre, address),
                getWallet: (privateKeyOrIndex) => (0, helpers_1.getWallet)(this._hre, privateKeyOrIndex),
                getWallets: () => (0, helpers_1.getWallets)(this._hre),
                getImpersonatedSigner: (address) => (0, helpers_1.getImpersonatedSigner)(this._hre, address),
                getContractFactory: (0, helpers_1.makeGetContractFactory)(this._hre),
                getContractFactoryFromArtifact: (artifact, walletOrSignerOrOptions, deploymentType) => (0, helpers_1.getContractFactoryFromArtifact)(this._hre, artifact, walletOrSignerOrOptions, deploymentType),
                getContractAt: (0, helpers_1.makeContractAt)(this._hre),
                getContractAtFromArtifact: (artifact, address, walletOrSigner) => (0, helpers_1.getContractAtFromArtifact)(this._hre, artifact, address, walletOrSigner),
                extractFactoryDeps: (artifact) => (0, helpers_1.extractFactoryDeps)(this._hre, artifact),
                loadArtifact: (name) => (0, helpers_1.loadArtifact)(this._hre, name),
                deployContract: (artifact, constructorArguments, walletOrSigner, overrides, additionalFactoryDeps) => (0, helpers_1.deployContract)(this._hre, artifact, constructorArguments, walletOrSigner, overrides, additionalFactoryDeps),
            };
        });
    }
}
exports.ZkSyncGenerator = ZkSyncGenerator;
//# sourceMappingURL=extension-generator.js.map