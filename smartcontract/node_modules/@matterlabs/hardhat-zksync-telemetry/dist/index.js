"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const config_1 = require("hardhat/config");
const zksync_telemetry_js_1 = require("@matterlabs/zksync-telemetry-js");
const TELEMETRY_CONFIG_NAME = 'zksync-tooling';
const POSTHOG_API_KEY = 'phc_nUZ2xCocs20EXLd8nrRGbzWv46txGI7IsvOl5mBaLuq';
if (!global.telemetryInstance) {
    const telemetry = zksync_telemetry_js_1.Telemetry.initialize('hardhat-zksync', require('../package.json').version, TELEMETRY_CONFIG_NAME, POSTHOG_API_KEY);
    global.telemetryInstance = telemetry;
    (0, config_1.extendEnvironment)((hre) => {
        for (const [taskName, taskDefinition] of Object.entries(hre.tasks)) {
            if (taskDefinition.isSubtask || taskName === 'help') {
                continue;
            }
            (0, config_1.task)(taskName, taskDefinition.description).setAction(async (args, _, runSuper) => {
                let result = 'success';
                try {
                    return await runSuper(args);
                }
                catch (error) {
                    result = 'failure';
                    try {
                        const err = new Error(error.message);
                        delete err.stack;
                        telemetry.trackError(err, { task: taskName });
                    }
                    catch { }
                    throw error;
                }
                finally {
                    try {
                        telemetry.trackEvent('task_executed', { name: taskName, result });
                        await telemetry.shutdown();
                    }
                    catch { }
                }
            });
        }
    });
}
exports.default = global.telemetryInstance;
//# sourceMappingURL=index.js.map